--IMPORT PRODUCT COVERAGE - SMCP FROM SMC
--IMPORT ROVER_SOURCE VALUE


-->>ASSIGN SMCP TO ROVER SOURCE DATA
--STEP 0.1
--CREATE TABLE
CREATE TABLE EQS_S1_EOD_SMCP
(
  SEC_ID VARCHAR2(20 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE VARCHAR2(26 BYTE) 
, SMCP VARCHAR2(20 BYTE) 
) ;

INSERT INTO EQS_S1_EOD_SMCP(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP)
SELECT
upper(EQS_SOURCE.sec_id) sec_id,
rover_date,
rover_value,
EQS_SMCP.SMCP SMCP
FROM EQS_SOURCE
INNER JOIN EQS_SMCP ON upper(EQS_SOURCE.sec_id) = EQS_SMCP.CSP;

--COUNT OF UNIQUE ID
SELECT count(distinct sec_id) FROM EQS_S1_EOD_SMCP;

--COUNT OF UNIQUE ID + ROVER_DATE = LINES OF SOURCE FILE
SELECT count(sec_id) FROM (
SELECT distinct sec_id,rover_date FROM EQS_S1_EOD_SMCP);


--CREATE DB LINK ON PMC WHU to PMC EOD. To be able to query data from PMC EOD and assign values from historic PMC WHU. Not possible other way around

/*OWNER	KP42437
DB_LINK	PMC_EOD_LINK
USERNAME	
HOST	(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = pmcuat2-scan.nam.nsroot.net)(PORT = 15210)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = PMCG2U1)))
CREATED	22-MAR-17*/

--!!!!DB change on PMCWHU1 - UAT !!!!!

--STEP 0.2
--CREATE TABLE
CREATE TABLE EQS_S2_EOD_SMCP_TAG
(
  SEC_ID VARCHAR2(20 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE VARCHAR2(26 BYTE) 
, SMCP VARCHAR2(20 BYTE)
, TAG VARCHAR2(50 BYTE)
, START_DT DATE
, END_DT DATE
);

--STEP 2
--JOIN TAG BY SMCP
INSERT INTO EQS_S2_EOD_SMCP_TAG(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,TAG,START_DT,END_DT)
SELECT 
C_SMCP.*,
PRIX.TAG,
PRIX.START_DT,
PRIX.END_DT
FROM EQS_S1_EOD_SMCP C_SMCP
LEFT OUTER JOIN SMCCACHE.PRICE_XREF@PMC_EOD_LINK PRIX ON C_SMCP.SMCP = PRIX.SMCP;

--COUNT OF UNIQUE ID --1
SELECT count(distinct sec_id) FROM EQS_S2_EOD_SMCP_TAG;

--COUNT OF UNIQUE ID + ROVER_DATE = LINES OF SOURCE FILE --120
SELECT count(sec_id) FROM (
SELECT distinct sec_id,rover_date FROM EQS_S2_EOD_SMCP_TAG);

select distinct SEC_ID,smcp, tag from EQS_S2_EOD_SMCP_TAG 
where tag is null;
--and sec_id ='039380100';

select distinct SEC_ID,smcp, tag from EQS_S2_EOD_SMCP_TAG
WHERE sec_id ='039380100';

select distinct sec_id from EQS_S2_EOD_SMCP_TAG where smcp is null;

select distinct SEC_ID,smcp, tag from EQS_S2_EOD_SMCP_TAG 
where tag is null;

select distinct nll.sec_id
from
(Select distinct SEC_ID,smcp, tag from EQS_S2_EOD_SMCP_TAG 
where tag is null)nll--903
minus
select distinct n_null.sec_id
from
(Select distinct SEC_ID,smcp, tag from EQS_S2_EOD_SMCP_TAG 
where tag is not null)n_null;

--COUNT WHAT ARE PRICE VENDOR COVERAGE. HOW MANY ID's HAVE ANY PRICE SOURCE

SELECT distinct
n_tag.sec_id,
tag.tag
from
(SELECT distinct
sec_id
from EQS_S2_EOD_SMCP_TAG)n_tag
LEFT OUTER JOIN EQS_S2_EOD_SMCP_TAG tag ON n_tag.sec_id=tag.sec_id;

select no_tag.sec_id, all_tag.sec_id, all_tag.tag 
from
(select distinct sec_id from EQS_S2_EOD_SMCP_TAG where tag is null)no_tag
left outer join EQS_S2_EOD_SMCP_TAG all_tag ON no_tag.sec_id = all_tag.sec_id
where tag is null;

--STEP 3
--CREATE TABLE
CREATE TABLE EQS_S3_EOD_SMCP_TAG_NA
(
  SEC_ID VARCHAR2(20 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(20 BYTE)
, TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
) ;

INSERT INTO EQS_S3_EOD_SMCP_TAG_NA(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,TAG,START_DT,END_DT)
SELECT *
FROM EQS_S2_EOD_SMCP_TAG
WHERE ROVER_VALUE <> 'NA';

select * from EQS_S3_EOD_SMCP_TAG_NA where tag is not null;
--COUNTS
commit;
--COUNT ID no for confirmation = 2313
SELECT COUNT(distinct sec_id) FROM EQS_S3_EOD_SMCP_TAG_NA;
--ON PMC WH HIST
--COUNT OF ALL SEC ID,ROV_DATE WITOUT N/A PRICES = 758387
SELECT count(sec_id) FROM
(SELECT distinct sec_id, rover_date FROM EQS_S3_EOD_SMCP_TAG_NA);
--COUNT INPUT CSP from CSP_SMC list =2317
SELECT COUNT(distinct CSP) FROM EQS_SMCP;
--COUNT INPUT CSP from Rover =2314 (2 were not found in vendor schema, one have been lost in assigning rover value process)
SELECT COUNT(distinct sec_id) FROM CSP_PRICE_EOD@PMC_EOD_LINK;
--COUNT SMCP assign =2314
SELECT COUNT(distinct sec_id) FROM S1_CSP_PRICE_EOD_SMCP@PMC_EOD_LINK; --where SMCP is not null;
--COUNT TAG assign =2313 (where TAG is not null)
SELECT COUNT(distinct sec_id) FROM EQS_S2_EOD_SMCP_TAG where TAG is not null;
--NO TAG assigned list (where TAG is null) (760936104 - 1 TAG was not assigned because this id was found only in vendor shcema)
SELECT distinct sec_id FROM EQS_S2_EOD_SMCP_TAG where TAG is null;

SELECT distinct sec_id FROM EQS_S2_EOD_SMCP_TAG where TAG is null
MINUS
SELECT distinct sec_id FROM EQS_S2_EOD_SMCP_TAG where TAG is not null;

---ASSIGN PRICE PRICEEOD.METRIC
--STEP 0.4
--CREATE TABLE
CREATE TABLE EQS_S4_EOD_SMCP_TAG_PR
(
  SEC_ID VARCHAR2(50 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(50 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, METRIC_TAG VARCHAR2(100 BYTE)
, EFF_DT TIMESTAMP(6)
, METRIC_CD VARCHAR2(30 BYTE)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
);

--STEP 4
--ASSIGN PRICE EOD CSP_PRICE_EOD_NO_PURE  PRICEEOD.METRIC
INSERT INTO EQS_S4_EOD_SMCP_TAG_PR(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,METRIC_TAG,EFF_DT,METRIC_CD,METRIC_VAL,PRICE_COV)
SELECT
SEC_ID,
ROVER_DATE,
ROVER_VALUE,
SMCP,
PE.TAG PE_TAG,
START_DT,
END_DT,
METRIC.TAG METRIC_TAG,
EFF_DT,
METRIC.METRIC_CD METRIC_CD,
METRIC_VAL,
case
when ROVER_DATE = METRIC.EFF_DT AND METRIC.METRIC_VAL = ROUND(ROVER_VALUE,2) then 'SAME_PRICE_AVAILABLE'
when ROVER_DATE = METRIC.EFF_DT then 'PRICE_FOR_DATE_AVAILABLE'
else 'PRICE_NOT_AVAILABLE'
end as PRICE_COV
FROM EQS_S3_EOD_SMCP_TAG_NA PE
LEFT OUTER JOIN PRICEEOD.METRIC@PMC_EOD_LINK METRIC ON METRIC.TAG=PE.TAG AND ROVER_DATE = METRIC.EFF_DT;-- AND METRIC.METRIC_CD = 'CLOSE'

select count (sec_id) from EQS_S4_EOD_SMCP_TAG_PR;--78494 where PRICE_COV = 'PRICE_NOT_AVAILABLE'; --78468

--STEP 4.1
--COUNT ALL MATCH  = 120
SELECT count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date
FROM EQS_S4_EOD_SMCP_TAG_PR);

--STEP 4.2
--COUNT MATCH FOR SAME_PRICE_AVAILABLE = 5826 AND PRICE_FOR_DATE_AVAILABLE = 5625
SELECT count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date
FROM EQS_S4_EOD_SMCP_TAG_PR
where PRICE_COV='SAME_PRICE_AVAILABLE'); -- = 0
--where PRICE_COV='PRICE_FOR_DATE_AVAILABLE'); -- = 5625

SELECT count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date
FROM EQS_S4_EOD_SMCP_TAG_PR
where PRICE_COV='PRICE_FOR_DATE_AVAILABLE'); -- = 8

--STEP 4.2
--COUNT AND GROUP BY METRIC CD
SELECT METRIC_CD, count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date,METRIC_CD
FROM EQS_S4_EOD_SMCP_TAG_PR
where PRICE_COV='PRICE_FOR_DATE_AVAILABLE')
GROUP BY METRIC_CD;
--where PRICE_COV='PRICE_FOR_DATE_AVAILABLE');

--STEP 0.6
--CREATE TABLE
CREATE TABLE EQS_S6_EOD_MATCH
(
  SEC_ID VARCHAR2(50 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(50 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, METRIC_TAG VARCHAR2(100 BYTE)
, EFF_DT TIMESTAMP(6)
, METRIC_CD VARCHAR2(30 BYTE)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
, PMC_SRC VARCHAR2(60 BYTE)
);


--STEP 6
-- INSERT SAME_PRICE_AVAILABLE AND PRICE_FOR_DATE_AVAILABLE AS PMC PRICEEOD.METRIC FOUND RESULT
INSERT INTO EQS_S6_EOD_MATCH(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,METRIC_TAG,EFF_DT,METRIC_CD,METRIC_VAL,PRICE_COV,PMC_SRC)
SELECT pd1.*, 'PRICEEOD.METRIC' AS PMC_SRC
FROM(
SELECT distinct *
FROM EQS_S4_EOD_SMCP_TAG_PR
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE' --PRICE_FOR_DATE_AVAILABLE + SAME_PRICE_AVAILABLE
UNION
SELECT * 
FROM
(SELECT distinct * --ONLY PRICE_FOR_DATE_AVAILABLE WITHOUT SAME_PRICE_AVAILABLE / PRICE_FOR_DATE_AVAILABLE - SAME_PRICE_AVAILABLE = PRICE_FOR_DATE_AVAILABLE ONLY
FROM EQS_S4_EOD_SMCP_TAG_PR
WHERE PRICE_COV = 'PRICE_FOR_DATE_AVAILABLE'
MINUS
SELECT distinct *
FROM EQS_S4_EOD_SMCP_TAG_PR
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE') pd)pd1;

--STEP 6.1
--COUNT
select count(*) from --8
(select distinct sec_id, rover_date
from EQS_S6_EOD_MATCH);


--STEP 0.8
--CREATE TABLE
CREATE TABLE EQS_S8_EOD_GLD_PR
(
  SEC_ID VARCHAR2(20 BYTE)
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(20 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, GOLD_D_SMCP VARCHAR2(100 BYTE)
, GOLD_D_DERIV_METHOD VARCHAR2(20 BYTE)
, EFF_DT TIMESTAMP(6)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
);

--COUNT OF SEC_ID WITHOUT ANY PRICE; PRICE_COV = 'PRICE_NOT_AVAILABLE'
select count (sec_id) from (
Select * from EQS_S4_EOD_SMCP_TAG_PR where PRICE_COV ='PRICE_NOT_AVAILABLE'
MINUS 
Select * from EQS_S4_EOD_SMCP_TAG_PR where PRICE_COV ='SAME_PRICE_AVAILABLE' or PRICE_COV ='PRICE_FOR_DATE_AVAILABLE');



SELECT 
SEC_ID,
ROVER_DATE,
ROVER_VALUE,
eod_no_match.SMCP SMCP,
eod_no_match.PE_TAG PE_TAG,
START_DT,
END_DT,
GOLD_D.SMCP GOLD_D_SMCP,
GOLD_D.DERIV_METHOD GOLD_D_DERIV_METHOD,
GOLD_D.EFF_DT,
GOLD_D.METRIC_VAL,
case
when ROVER_DATE = GOLD_D.EFF_DT AND GOLD_D.METRIC_VAL = ROUND(ROVER_VALUE,2) then 'SAME_PRICE_AVAILABLE'
when ROVER_DATE = GOLD_D.EFF_DT then 'PRICE_FOR_DATE_AVAILABLE'
else 'PRICE_NOT_AVAILABLE'
end as PRICE_COV
FROM  (
Select * from EQS_S4_EOD_SMCP_TAG_PR where PRICE_COV ='PRICE_NOT_AVAILABLE'
MINUS 
Select * from EQS_S4_EOD_SMCP_TAG_PR where PRICE_COV ='SAME_PRICE_AVAILABLE' or PRICE_COV ='PRICE_FOR_DATE_AVAILABLE')eod_no_match
LEFT OUTER JOIN CONSUMER.GOLDEN_DERIVED_METRIC@PMC_EOD_LINK GOLD_D ON GOLD_D.SMCP=eod_no_match.SMCP AND ROVER_DATE = GOLD_D.EFF_DT;-- AND GOLD_D.DERIV_METHOD = 'CLOSE' ROVER_DATE = GOLD_D.EFF_DT ;

--STEP 8
--ASSIGN PRICE EOD GOLD_D TO CSP_PRICE_EOD_NO_PURE 
INSERT INTO EQS_S8_EOD_GLD_PR(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,GOLD_D_SMCP,GOLD_D_DERIV_METHOD,EFF_DT,METRIC_VAL,PRICE_COV)
SELECT
SEC_ID,
ROVER_DATE,
ROVER_VALUE,
PME.SMCP SMCP,
PME.PE_TAG PE_TAG,
START_DT,
END_DT,
GOLD_D.SMCP GOLD_D_SMCP,
GOLD_D.DERIV_METHOD GOLD_D_DERIV_METHOD,
EFF_DT,
METRIC_VAL,
case
when ROVER_DATE = GOLD_D.EFF_DT AND GOLD_D.METRIC_VAL = ROUND(ROVER_VALUE,2) then 'SAME_PRICE_AVAILABLE'
when ROVER_DATE = GOLD_D.EFF_DT then 'PRICE_FOR_DATE_AVAILABLE'
else 'PRICE_NOT_AVAILABLE'
end as PRICE_COV
FROM S7_CSP_EOD_NO_MATCH_SMCP_TAG PME  
LEFT OUTER JOIN CONSUMER.GOLDEN_DERIVED_METRIC@PMC_EOD_LINK GOLD_D ON GOLD_D.SMCP=PME.SMCP-- AND GOLD_D.DERIV_METHOD = 'CLOSE'
WHERE ROVER_DATE = GOLD_D.EFF_DT;

select * from S7_CSP_EOD_NO_MATCH_SMCP_TAG;

commit;

--STEP 8.1
--COUNT ALL MATCH  = 425
SELECT count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date
FROM EQS_S8_EOD_GLD_PR);

--STEP 8.2
--COUNT MATCH FOR SAME_PRICE_AVAILABLE = 5826 AND PRICE_FOR_DATE_AVAILABLE = 5625
SELECT count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date
FROM EQS_S8_EOD_GLD_PR
--where PRICE_COV='SAME_PRICE_AVAILABLE'); -- = 368
where PRICE_COV='PRICE_FOR_DATE_AVAILABLE'); -- = 207

-- 425 - 368 = 57 (PRICE_FOR_DATE_AVAILABLE)

--STEP 8.3
--COUNT
SELECT GOLD_D_DERIV_METHOD, count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date,GOLD_D_DERIV_METHOD
FROM EQS_S8_EOD_GLD_PR
--where PRICE_COV='PRICE_FOR_DATE_AVAILABLE')
--GROUP BY GOLD_D_DERIV_METHOD;
where PRICE_COV='SAME_PRICE_AVAILABLE')
GROUP BY GOLD_D_DERIV_METHOD;


--STEP 0.9
--CREATE TABLE
CREATE TABLE S9_CSP_EOD_GLD_NO_MATCH
(
  SEC_ID VARCHAR2(20 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
);


--STEP 9
--INSERT INTO S9_CSP_EOD_GLD_NO_MATCH(SEC_ID,ROVER_DATE,ROVER_VALUE) EOD GOLD_D
--ONLY NON MATCH SECURITIES LIST
INSERT INTO S9_CSP_EOD_GLD_NO_MATCH(SEC_ID,ROVER_DATE,ROVER_VALUE)
SELECT distinct SEC_ID,rover_date,rover_value
FROM S7_CSP_EOD_NO_MATCH_SMCP_TAG --ALL_ID -*(*minus) THOSE THAT WAS ALREADY FOUND
MINUS
SELECT distinct SEC_ID,rover_date,rover_value
FROM
(
SELECT distinct *
FROM EQS_S8_EOD_GLD_PR
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE' --PRICE_FOR_DATE_AVAILABLE + SAME_PRICE_AVAILABLE
UNION
SELECT * 
FROM
(SELECT distinct * --ONLY PRICE_FOR_DATE_AVAILABLE WITHOUT SAME_PRICE_AVAILABLE / PRICE_FOR_DATE_AVAILABLE - SAME_PRICE_AVAILABLE = PRICE_FOR_DATE_AVAILABLE ONLY
FROM EQS_S8_EOD_GLD_PR
WHERE PRICE_COV = 'PRICE_FOR_DATE_AVAILABLE'
MINUS
SELECT distinct *
FROM EQS_S8_EOD_GLD_PR
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE') PFD);


select count(sec_id)
FROM (
select distinct sec_id,rover_date from S9_CSP_EOD_GLD_NO_MATCH);

--STEP 0.10
--CREATE TABLE
CREATE TABLE S10_CSP_EOD_GLD_MATCH
(
  SEC_ID VARCHAR2(20 BYTE)
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(20 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, GOLD_D_SMCP VARCHAR2(100 BYTE)
, GOLD_D_DERIV_METHOD VARCHAR2(20 BYTE)
, EFF_DT TIMESTAMP(6)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
, PMC_SRC VARCHAR2(80 BYTE)
);


--STEP 10
-- INSERT SAME_PRICE_AVAILABLE AND PRICE_FOR_DATE_AVAILABLE AS PMC PRICEEOD.METRIC FOUND RESULT
INSERT INTO S10_CSP_EOD_GLD_MATCH(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,GOLD_D_SMCP,GOLD_D_DERIV_METHOD,EFF_DT,METRIC_VAL,PRICE_COV,PMC_SRC)
SELECT pd1.*, 'CONSUMER.GOLDEN_DERIVED_METRIC' AS PMC_SRC
FROM(
SELECT distinct *
FROM EQS_S8_EOD_GLD_PR
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE' --PRICE_FOR_DATE_AVAILABLE + SAME_PRICE_AVAILABLE
UNION
SELECT * 
FROM
(SELECT distinct * --ONLY PRICE_FOR_DATE_AVAILABLE WITHOUT SAME_PRICE_AVAILABLE / PRICE_FOR_DATE_AVAILABLE - SAME_PRICE_AVAILABLE = PRICE_FOR_DATE_AVAILABLE ONLY
FROM EQS_S8_EOD_GLD_PR
WHERE PRICE_COV = 'PRICE_FOR_DATE_AVAILABLE'
MINUS
SELECT distinct *
FROM EQS_S8_EOD_GLD_PR
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE') pd)pd1;

--STEP 10.1
--COUNT
select count(*) from --k
(select distinct sec_id, rover_date
from S10_CSP_EOD_GLD_MATCH);


--STEP 0.11
--CREATE TABLE
CREATE TABLE S11_CSP_EOD_GLD_NO_M_SMCP_TAG
(
  SEC_ID VARCHAR2(50 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(50 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
);


--STEP 11
--ASSIGN SMCP & TAG TO GOLD_D NO MATCH S11_CSP_EOD_GLD_NO_M_SMCP_TAG
INSERT INTO S11_CSP_EOD_GLD_NO_M_SMCP_TAG(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT)
SELECT N_M.*,SMCP,TAG PE_TAG,START_DT,END_DT
FROM S9_CSP_EOD_GLD_NO_MATCH N_M
LEFT JOIN EQS_S3_EOD_SMCP_TAG_NA T_NA ON T_NA.SEC_ID=N_M.SEC_ID AND T_NA.ROVER_DATE = N_M.ROVER_DATE;


--STEP 11.1
--COUNT
select count(*) from --752136
(select distinct sec_id, rover_date
from S11_CSP_EOD_GLD_NO_M_SMCP_TAG);

--STEP 11.2
--LOOK
select * from S11_CSP_EOD_GLD_NO_M_SMCP_TAG;


--STEP 0.12
--CREATE TABLE
CREATE TABLE S12_CSP_HIST_PRCEOD
(
  SEC_ID VARCHAR2(50 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(50 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, METRIC_TAG VARCHAR2(100 BYTE)
, EFF_DT TIMESTAMP(6)
, METRIC_CD VARCHAR2(30 BYTE)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
);

--STEP 12
--ASSIGN PRICE EOD S11_CSP_EOD_GLD_NO_M_SMCP_TAG  PRICEEOD_HIST.METRIC
INSERT INTO S12_CSP_HIST_PRCEOD(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,METRIC_TAG,EFF_DT,METRIC_CD,METRIC_VAL,PRICE_COV)
SELECT
SEC_ID,
ROVER_DATE,
ROVER_VALUE,
SMCP,
PE.PE_TAG PE_TAG,
START_DT,
END_DT,
METRIC.TAG METRIC_TAG,
EFF_DT,
METRIC.METRIC_CD METRIC_CD,
METRIC_VAL,
case
when ROVER_DATE = METRIC.EFF_DT AND METRIC.METRIC_VAL = ROUND(ROVER_VALUE,2) then 'SAME_PRICE_AVAILABLE'
when ROVER_DATE = METRIC.EFF_DT then 'PRICE_FOR_DATE_AVAILABLE'
else 'PRICE_NOT_AVAILABLE'
end as PRICE_COV
FROM S11_CSP_EOD_GLD_NO_M_SMCP_TAG PE
LEFT OUTER JOIN PRICEEOD_HIST.METRIC METRIC ON METRIC.TAG=PE.PE_TAG-- AND METRIC.METRIC_CD = 'CLOSE'
WHERE ROVER_DATE = METRIC.EFF_DT;


--STEP 12.1
--COUNT ALL MATCH  = 9203
SELECT count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date
FROM S12_CSP_HIST_PRCEOD);

--STEP 12.2
--COUNT MATCH FOR SAME_PRICE_AVAILABLE = 5826 AND PRICE_FOR_DATE_AVAILABLE = 5625
SELECT count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date
FROM S12_CSP_HIST_PRCEOD
--where PRICE_COV='SAME_PRICE_AVAILABLE'); -- = 8714
where PRICE_COV='PRICE_FOR_DATE_AVAILABLE'); -- = 9181

-- 9203(ALL) - 8714(SAME_PRC_A) = 489 (PRICE_FOR_DATE_AVAILABLE)

--STEP 12.3
--COUNT
SELECT METRIC_CD, count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date,METRIC_CD
FROM S12_CSP_HIST_PRCEOD
where PRICE_COV='SAME_PRICE_AVAILABLE')
--where PRICE_COV='PRICE_FOR_DATE_AVAILABLE')
GROUP BY METRIC_CD;

--STEP 0.13
--CREATE TABLE
CREATE TABLE S13_CSP_HIST_PRCEOD_NO_MATCH
(
  SEC_ID VARCHAR2(20 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
);


--STEP 13
--INSERT INTO S13_CSP_HIST_PRCEOD_NO_MATCH(SEC_ID,ROVER_DATE,ROVER_VALUE) EOD GOLD_D
--ONLY NON MATCH SECURITIES LIST
INSERT INTO S13_CSP_HIST_PRCEOD_NO_MATCH(SEC_ID,ROVER_DATE,ROVER_VALUE)
SELECT distinct SEC_ID,rover_date,rover_value
FROM S11_CSP_EOD_GLD_NO_M_SMCP_TAG --ALL_ID -*(*minus) THOSE THAT WAS ALREADY FOUND
MINUS
SELECT distinct SEC_ID,rover_date,rover_value
FROM
(
SELECT distinct *
FROM S12_CSP_HIST_PRCEOD
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE' --PRICE_FOR_DATE_AVAILABLE + SAME_PRICE_AVAILABLE
UNION
SELECT * 
FROM
(SELECT distinct * --ONLY PRICE_FOR_DATE_AVAILABLE WITHOUT SAME_PRICE_AVAILABLE / PRICE_FOR_DATE_AVAILABLE - SAME_PRICE_AVAILABLE = PRICE_FOR_DATE_AVAILABLE ONLY
FROM S12_CSP_HIST_PRCEOD
WHERE PRICE_COV = 'PRICE_FOR_DATE_AVAILABLE'
MINUS
SELECT distinct *
FROM S12_CSP_HIST_PRCEOD
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE') PFD);


select count(sec_id) --=742933
FROM (
select distinct sec_id,rover_date from S13_CSP_HIST_PRCEOD_NO_MATCH);

--STEP 0.14
--CREATE TABLE
CREATE TABLE S14_CSP_HIST_PRCEOD_MATCH
(
  SEC_ID VARCHAR2(50 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(50 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, METRIC_TAG VARCHAR2(100 BYTE)
, EFF_DT TIMESTAMP(6)
, METRIC_CD VARCHAR2(30 BYTE)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
, PMC_SRC VARCHAR2(60 BYTE)
);


select * from S12_CSP_HIST_PRCEOD;

--STEP 14
-- INSERT SAME_PRICE_AVAILABLE AND PRICE_FOR_DATE_AVAILABLE AS PMC PRICEEOD_HIST.METRIC FOUND RESULT
INSERT INTO S14_CSP_HIST_PRCEOD_MATCH(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,METRIC_TAG,EFF_DT,METRIC_CD,METRIC_VAL,PRICE_COV,PMC_SRC)
SELECT pd1.*, 'PRICEEOD_HIST.METRIC' AS PMC_SRC
FROM(
SELECT distinct *
FROM S12_CSP_HIST_PRCEOD
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE' --PRICE_FOR_DATE_AVAILABLE + SAME_PRICE_AVAILABLE
UNION
SELECT * 
FROM
(SELECT distinct * --ONLY PRICE_FOR_DATE_AVAILABLE WITHOUT SAME_PRICE_AVAILABLE / PRICE_FOR_DATE_AVAILABLE - SAME_PRICE_AVAILABLE = PRICE_FOR_DATE_AVAILABLE ONLY
FROM S12_CSP_HIST_PRCEOD
WHERE PRICE_COV = 'PRICE_FOR_DATE_AVAILABLE'
MINUS
SELECT distinct *
FROM S12_CSP_HIST_PRCEOD
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE') pd)pd1;

--STEP 14.1
--COUNT
select count(*) from --k
(select distinct sec_id, rover_date
from S14_CSP_HIST_PRCEOD_MATCH);


--STEP 0.15
--CREATE TABLE
CREATE TABLE S15_CSP_HIST_PRCEOD_NO_M_S_TAG
(
  SEC_ID VARCHAR2(50 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(50 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
);

select * from S13_CSP_HIST_PRCEOD_NO_MATCH;

--STEP 15
--ASSIGN SMCP & TAG TO PRICEEOD_GH NO MATCH S13_CSP_HIST_PRCEOD_NO_MATCH
INSERT INTO S15_CSP_HIST_PRCEOD_NO_M_S_TAG(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT)
SELECT N_M.*,SMCP,TAG PE_TAG,START_DT,END_DT
FROM S13_CSP_HIST_PRCEOD_NO_MATCH N_M
LEFT JOIN EQS_S3_EOD_SMCP_TAG_NA T_NA ON T_NA.SEC_ID=N_M.SEC_ID AND T_NA.ROVER_DATE = N_M.ROVER_DATE;


--STEP 15.1
--COUNT
select count(*) from --752136
(select distinct sec_id, rover_date
from S15_CSP_HIST_PRCEOD_NO_M_S_TAG);

--STEP 15.2
--LOOK
select * from S15_CSP_HIST_PRCEOD_NO_M_S_TAG;


--STEP 0.16
--CREATE TABLE
CREATE TABLE s16_CSP_HIST_GLD_PRC
(
  SEC_ID VARCHAR2(20 BYTE)
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(20 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, GOLD_D_SMCP VARCHAR2(100 BYTE)
, GOLD_D_DERIV_METHOD VARCHAR2(20 BYTE)
, EFF_DT TIMESTAMP(6)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
);

select * from S15_CSP_HIST_PRCEOD_NO_M_S_TAG;

--STEP 16
--ASSIGN PRICE HIST GOLD_D TO S15_CSP_HIST_PRCEOD_NO_M_S_TAG
INSERT INTO s16_CSP_HIST_GLD_PRC(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,GOLD_D_SMCP,GOLD_D_DERIV_METHOD,EFF_DT,METRIC_VAL,PRICE_COV)
SELECT
SEC_ID,
ROVER_DATE,
ROVER_VALUE,
PME.SMCP SMCP,
PME.PE_TAG PE_TAG,
START_DT,
END_DT,
GOLD_D.SMCP GOLD_D_SMCP,
GOLD_D.DERIV_METHOD GOLD_D_DERIV_METHOD,
EFF_DT,
METRIC_VAL,
case
when ROVER_DATE = GOLD_D.EFF_DT AND GOLD_D.METRIC_VAL = ROUND(ROVER_VALUE,2) then 'SAME_PRICE_AVAILABLE'
when ROVER_DATE = GOLD_D.EFF_DT then 'PRICE_FOR_DATE_AVAILABLE'
else 'PRICE_NOT_AVAILABLE'
end as PRICE_COV
FROM S15_CSP_HIST_PRCEOD_NO_M_S_TAG PME  
LEFT OUTER JOIN CONSUMER_HIST.GOLDEN_DERIVED_METRIC GOLD_D ON GOLD_D.SMCP=PME.SMCP-- AND GOLD_D.DERIV_METHOD = 'CLOSE'
WHERE ROVER_DATE = GOLD_D.EFF_DT;

select * from s16_CSP_HIST_GLD_PRC;

--STEP 16.1
--COUNT ALL MATCH  = 10272
SELECT count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date
FROM s16_CSP_HIST_GLD_PRC);

--STEP 16.2
--COUNT MATCH FOR SAME_PRICE_AVAILABLE = 5826 AND PRICE_FOR_DATE_AVAILABLE = 5625
SELECT count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date
FROM s16_CSP_HIST_GLD_PRC
where PRICE_COV='SAME_PRICE_AVAILABLE'); -- = 8212
--where PRICE_COV='PRICE_FOR_DATE_AVAILABLE'); -- = 9354

-- 10272 - 8212 = 2060 (PRICE_FOR_DATE_AVAILABLE)

--STEP 16.3
--COUNT
SELECT GOLD_D_DERIV_METHOD, count(sec_id)
FROM
(
SELECT distinct sec_id,rover_date,GOLD_D_DERIV_METHOD
FROM s16_CSP_HIST_GLD_PRC
where PRICE_COV='PRICE_FOR_DATE_AVAILABLE')
GROUP BY GOLD_D_DERIV_METHOD;
--where PRICE_COV='SAME_PRICE_AVAILABLE')
--GROUP BY GOLD_D_DERIV_METHOD;


--STEP 0.17
--CREATE TABLE
CREATE TABLE s17_CSP_EOD_GLD_NO_MATCH
(
  SEC_ID VARCHAR2(20 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
);


--STEP 17
--INSERT INTO S9_CSP_EOD_GLD_NO_MATCH(SEC_ID,ROVER_DATE,ROVER_VALUE) EOD GOLD_D
--ONLY NON MATCH SECURITIES LIST
INSERT INTO s17_CSP_EOD_GLD_NO_MATCH(SEC_ID,ROVER_DATE,ROVER_VALUE)
SELECT distinct SEC_ID,rover_date,rover_value
FROM S15_CSP_HIST_PRCEOD_NO_M_S_TAG --ALL_ID -*(*minus) THOSE THAT WAS ALREADY FOUND
MINUS
SELECT distinct SEC_ID,rover_date,rover_value
FROM
(
SELECT distinct *
FROM s16_CSP_HIST_GLD_PRC
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE' --PRICE_FOR_DATE_AVAILABLE + SAME_PRICE_AVAILABLE
UNION
SELECT * 
FROM
(SELECT distinct * --ONLY PRICE_FOR_DATE_AVAILABLE WITHOUT SAME_PRICE_AVAILABLE / PRICE_FOR_DATE_AVAILABLE - SAME_PRICE_AVAILABLE = PRICE_FOR_DATE_AVAILABLE ONLY
FROM s16_CSP_HIST_GLD_PRC
WHERE PRICE_COV = 'PRICE_FOR_DATE_AVAILABLE'
MINUS
SELECT distinct *
FROM s16_CSP_HIST_GLD_PRC
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE') PFD);


select count(sec_id)
FROM (
select distinct sec_id,rover_date from s17_CSP_EOD_GLD_NO_MATCH);

--STEP 0.18
--CREATE TABLE
CREATE TABLE S18_CSP_HIST_GLD_MATCH
(
  SEC_ID VARCHAR2(20 BYTE)
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(20 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, GOLD_D_SMCP VARCHAR2(100 BYTE)
, GOLD_D_DERIV_METHOD VARCHAR2(20 BYTE)
, EFF_DT TIMESTAMP(6)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
, PMC_SRC VARCHAR2(80 BYTE)
);


--STEP 18
-- INSERT SAME_PRICE_AVAILABLE AND PRICE_FOR_DATE_AVAILABLE AS PMC PRICEEOD.METRIC FOUND RESULT
INSERT INTO S18_CSP_HIST_GLD_MATCH(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,GOLD_D_SMCP,GOLD_D_DERIV_METHOD,EFF_DT,METRIC_VAL,PRICE_COV,PMC_SRC)
SELECT pd1.*, 'CONSUMER.GOLDEN_DERIVED_METRIC' AS PMC_SRC
FROM(
SELECT distinct *
FROM s16_CSP_HIST_GLD_PRC
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE' --PRICE_FOR_DATE_AVAILABLE + SAME_PRICE_AVAILABLE
UNION
SELECT * 
FROM
(SELECT distinct * --ONLY PRICE_FOR_DATE_AVAILABLE WITHOUT SAME_PRICE_AVAILABLE / PRICE_FOR_DATE_AVAILABLE - SAME_PRICE_AVAILABLE = PRICE_FOR_DATE_AVAILABLE ONLY
FROM s16_CSP_HIST_GLD_PRC
WHERE PRICE_COV = 'PRICE_FOR_DATE_AVAILABLE'
MINUS
SELECT distinct *
FROM s16_CSP_HIST_GLD_PRC
WHERE PRICE_COV = 'SAME_PRICE_AVAILABLE') pd)pd1;

--STEP 18.1
--COUNT
select count(*) from --k
(select distinct sec_id, rover_date
from S18_CSP_HIST_GLD_MATCH);


--STEP 0.19
--CREATE TABLE
CREATE TABLE S19_CSP_HIST_GLD_NO_M_SMCP_TAG
(
  SEC_ID VARCHAR2(50 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(50 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
);


--STEP 19
--ASSIGN SMCP & TAG TO GOLD_D NO MATCH S11_CSP_EOD_GLD_NO_M_SMCP_TAG
INSERT INTO S19_CSP_HIST_GLD_NO_M_SMCP_TAG(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT)
SELECT N_M.*,SMCP,TAG PE_TAG,START_DT,END_DT
FROM s17_CSP_EOD_GLD_NO_MATCH N_M
LEFT JOIN EQS_S3_EOD_SMCP_TAG_NA T_NA ON T_NA.SEC_ID=N_M.SEC_ID AND T_NA.ROVER_DATE = N_M.ROVER_DATE;

select count(sec_id) from(
select distinct A.* from s17_CSP_EOD_GLD_NO_MATCH A);


--STEP 19.1
--COUNT
select count(*) from --752136
(select distinct sec_id, rover_date
from S19_CSP_HIST_GLD_NO_M_SMCP_TAG);

--STEP 19.2
--LOOK
select * from S19_CSP_HIST_GLD_NO_M_SMCP_TAG;


--STEP 0.20
--CREATE TABLE
CREATE TABLE S20_CSP_ALL_N_M_PDT_INFO
(
  SEC_ID VARCHAR2(50 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(50 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, INST_LST_LVL_CD VARCHAR2(80 BYTE)
, ACTIVE_IND VARCHAR2(20 BYTE)
, COUNTRY VARCHAR2(20 BYTE)
, MKT_SECTOR_CD VARCHAR2(20 BYTE)
, MKT_SEGMENT_CD VARCHAR2(50 BYTE)
, SEC_TY_LVL1 VARCHAR2(50 BYTE)
, SEC_TY_LVL2 VARCHAR2(50 BYTE)
, SECURITY_DSC VARCHAR2(80 BYTE)
);


--ASSIGN PRODUCT VALUES TO MATCHES AND NO MATCHES
INSERT INTO S20_CSP_ALL_N_M_PDT_INFO(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,INST_LST_LVL_CD,ACTIVE_IND,COUNTRY,MKT_SECTOR_CD,MKT_SEGMENT_CD,SEC_TY_LVL1,SEC_TY_LVL2,SECURITY_DSC)
SELECT 
ALL_N_M.*,
PRD.INST_LST_LVL_CD,
PDT.ACTIVE_IND,
PDT.COUNTRY,
PDT.MKT_SECTOR_CD,
PDT.MKT_SEGMENT_CD,
PDT.SEC_TY_LVL1,
PDT.SEC_TY_LVL2,
PDT.SECURITY_DSC
FROM S19_CSP_HIST_GLD_NO_M_SMCP_TAG ALL_N_M
LEFT JOIN SMCCACHE.PRODUCT@PMC_EOD_LINK PDT ON ALL_N_M.SMCP = PDT.SMCP
LEFT JOIN SMCCACHE.EXCHANGE_LISTING_INFO@PMC_EOD_LINK PRD ON ALL_N_M.SMCP = PRD.SMCP;


select * from S20_CSP_ALL_N_M_PDT_INFO
where MKT_SECTOR_CD is null;

select * from S20_CSP_ALL_N_M_PDT_INFO;

--split by mkt_sector_cd
SELECT MKT_SECTOR_CD, count(*) 
FROM
(select distinct sec_id, rover_date, MKT_SECTOR_CD from S20_CSP_ALL_N_M_PDT_INFO)
GROUP BY MKT_SECTOR_CD;



SELECT DIFF, count(sec_id)
FROM 
(
SELECT distinct
sec_id,
rover_date,
rover_value,
floor((to_date('10-FEB-17') - rover_date) /365.242199) as diff 
FROM S20_CSP_ALL_N_M_PDT_INFO)
GROUP BY DIFF;


SELECT DIFF, count(sec_id)
FROM 
(
SELECT distinct
sec_id,
rover_date,
rover_value,
floor((to_date('10-FEB-17') - rover_date) /365.242199) as diff 
FROM EQS_S3_EOD_SMCP_TAG_NA)
GROUP BY DIFF;

--STEP 0.21
--CREATE TABLE
CREATE TABLE S21_CSP_ALL_M
(
  SEC_ID VARCHAR2(50 BYTE) 
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
);

INSERT INTO S21_CSP_ALL_M(SEC_ID,ROVER_DATE,ROVER_VALUE
SELECT 
SEC_ID,
ROVER_DATE,
ROVER_VALUE
FROM S20_CSP_ALL_N_M_PDT_INFO;

--SPLIT BY DATA RANGE
--ASSIGN INST_LST_LVL_CD
--ADD INFO TO MATCHED


select * S5_CSP_EOD_NO_MATCH;

select * from S20_CSP_ALL_N_M_PDT_INFO;

CREATE TABLE S21_CSP_ALL_M
(
  SEC_ID VARCHAR2(20 BYTE)
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(20 BYTE)
, PE_TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, EFF_DT TIMESTAMP(6)
, METRIC_CD VARCHAR2(30 BYTE)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
, PMC_SRC VARCHAR2(80 BYTE)
);

INSERT INTO S21_CSP_ALL_M(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,METRIC_CD,METRIC_VAL,PRICE_COV,PMC_SRC)
SELECT SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,METRIC_CD,METRIC_VAL,PRICE_COV,PMC_SRC FROM
EQS_S6_EOD_MATCH
UNION
SELECT SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,GOLD_D_DERIV_METHOD AS METRIC_CD,METRIC_VAL,PRICE_COV,PMC_SRC 
FROM
S10_CSP_EOD_GLD_MATCH
UNION
SELECT SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,METRIC_CD,METRIC_VAL,PRICE_COV,PMC_SRC FROM
S14_CSP_HIST_PRCEOD_MATCH
UNION
SELECT SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,PE_TAG,START_DT,END_DT,GOLD_D_DERIV_METHOD AS METRIC_CD,METRIC_VAL,PRICE_COV,PMC_SRC FROM
S18_CSP_HIST_GLD_MATCH;

select count(sec_id) from --25726
(select distinct SEC_ID,ROVER_DATE from S21_CSP_ALL_M);

select count(*) from S21_CSP_ALL_M;
commit;


select * from S1_CSP_PRICE_EOD_SMCP;


--PMC ALL RESULTS AGAINST ROVER SEC FULL LIST (WITHOUT NA PRICES EQS_S3_EOD_SMCP_TAG_NA) 
CREATE TABLE S22_CSP_CPRC_FULL_RESULT
(
  SEC_ID VARCHAR2(20 BYTE)
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(40 BYTE)
, TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, METRIC_CD VARCHAR2(30 BYTE)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
, PMC_SRC VARCHAR2(80 BYTE)
);


--PMC ALL RESULTS AGAINST ROVER SEC FULL LIST (WITHOUT NA PRICES EQS_S3_EOD_SMCP_TAG_NA) 
INSERT INTO S22_CSP_CPRC_FULL_RESULT(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,TAG,START_DT,END_DT,METRIC_CD,METRIC_VAL,PRICE_COV,PMC_SRC)
select DISTINCT
csp_tag.sec_id SEC_ID,
csp_tag.ROVER_DATE ROVER_DATE,
csp_tag.ROVER_VALUE ROVER_VALUE,
csp_tag.SMCP SMCP,
csp_tag.TAG TAG,
csp_tag.START_DT START_DT,
csp_tag.END_DT END_DT,
m_all.METRIC_CD METRIC_CD,
m_all.METRIC_VAL METRIC_VAL,
m_all.PRICE_COV PRICE_COV,
m_all.PMC_SRC PMC_SRC
from EQS_S3_EOD_SMCP_TAG_NA csp_tag
left outer join S21_CSP_ALL_M m_all on csp_tag.sec_id = m_all.sec_id and csp_tag.rover_value = m_all.rover_value;

DROP TABLE S22_CSP_CPRC_FULL_RES_EXP;
CREATE TABLE S22_CSP_CPRC_FULL_RES_EXP
(
  SEC_ID VARCHAR2(20 BYTE)
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SMCP VARCHAR2(40 BYTE)
, TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, METRIC_CD VARCHAR2(30 BYTE)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
, PMC_SRC VARCHAR2(80 BYTE)
);

INSERT INTO S22_CSP_CPRC_FULL_RES_EXP@PMC_EOD_LINK(SEC_ID,ROVER_DATE,ROVER_VALUE,SMCP,TAG,START_DT,END_DT,METRIC_CD,METRIC_VAL,PRICE_COV,PMC_SRC)
select DISTINCT
csp_tag.sec_id SEC_ID,
csp_tag.ROVER_DATE ROVER_DATE,
csp_tag.ROVER_VALUE ROVER_VALUE,
csp_tag.SMCP SMCP,
csp_tag.TAG TAG,
csp_tag.START_DT START_DT,
csp_tag.END_DT END_DT,
m_all.METRIC_CD METRIC_CD,
m_all.METRIC_VAL METRIC_VAL,
m_all.PRICE_COV PRICE_COV,
m_all.PMC_SRC PMC_SRC
from EQS_S3_EOD_SMCP_TAG_NA csp_tag
left outer join S21_CSP_ALL_M m_all on csp_tag.sec_id = m_all.sec_id and csp_tag.rover_value = m_all.rover_value
where csp_tag.sec_id IN ('760936104','26833A105','G6331W109');


select * from S22_CSP_CPRC_FULL_RES_EXP
left outer join SMCCACHE.product@PMC_EOD_LINK prd;


select * from EQS_S3_EOD_SMCP_TAG_NA csp_tag where sec_id = '760936104';
select * from S21_CSP_ALL_M where sec_id = '26833A105'; and pe_tag is null;
STATUS_CD, ACTIVE_IND, INST_LST_LVL_CD, SECURITY_DSC, MKT_SECTOR_CD, SEC_TY_LVL1

DROP TABLE S22_CSP_CPRC_FULL_RES_EXP_DES;
CREATE TABLE S22_CSP_CPRC_FULL_RES_EXP_DES
(
  SEC_ID VARCHAR2(20 BYTE)
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SECURITY_DSC VARCHAR2(150 BYTE)
, MKT_SECTOR_CD VARCHAR2(40 BYTE)
, SEC_TY_LVL1 VARCHAR2(40 BYTE)
, SMCP VARCHAR2(40 BYTE)
, TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, METRIC_CD VARCHAR2(30 BYTE)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
, PMC_SRC VARCHAR2(80 BYTE)
);

INSERT INTO S22_CSP_CPRC_FULL_RES_EXP_DES@PMC_EOD_LINK(SEC_ID,ROVER_DATE,ROVER_VALUE,SECURITY_DSC,MKT_SECTOR_CD,SEC_TY_LVL1,SMCP,TAG,START_DT,END_DT,METRIC_CD,METRIC_VAL,PRICE_COV,PMC_SRC)
select distinct 
full_r.sec_id SEC_ID,
full_r.ROVER_DATE ROVER_DATE,
full_r.ROVER_VALUE ROVER_VALUE,
prd.SECURITY_DSC SECURITY_DSC,
prd.MKT_SECTOR_CD MKT_SECTOR_CD,
prd.SEC_TY_LVL1 SEC_TY_LVL1,
full_r.SMCP SMCP,
full_r.TAG TAG,
full_r.START_DT START_DT,
full_r.END_DT END_DT,
full_r.METRIC_CD METRIC_CD,
full_r.METRIC_VAL METRIC_VAL,
full_r.PRICE_COV PRICE_COV,
full_r.PMC_SRC PMC_SRC
from S22_CSP_CPRC_FULL_RES_EXP@PMC_EOD_LINK full_r
left outer join SMCCACHE.product@PMC_EOD_LINK prd on full_r.smcp = prd.smcp;

commit;
DROP TABLE S22_CSP_CPRC_F_R_EXP_DES_TQA;
CREATE TABLE S22_CSP_CPRC_F_R_EXP_DES_TQA
(
  SEC_ID VARCHAR2(20 BYTE)
, ROVER_DATE DATE 
, ROVER_VALUE FLOAT
, SECURITY_DSC VARCHAR2(150 BYTE)
, MKT_SECTOR_CD VARCHAR2(40 BYTE)
, SEC_TY_LVL1 VARCHAR2(40 BYTE)
, SMCP VARCHAR2(40 BYTE)
, TAG VARCHAR2(100 BYTE)
, START_DT DATE
, END_DT DATE
, METRIC_CD VARCHAR2(30 BYTE)
, METRIC_VAL FLOAT
, PRICE_COV VARCHAR2(80 BYTE)
, PMC_SRC VARCHAR2(80 BYTE)
, SEC_ID_TQA	VARCHAR2(50 BYTE)
, ROVER_DATE_TQA	DATE
, MARKETDATE	DATE
, CUSIP	VARCHAR2(50 BYTE)
, DSQTNAME	VARCHAR2(80 BYTE)
, REGION	VARCHAR2(50 BYTE)
, TYPECODE	VARCHAR2(50 BYTE)
, PRIMISOCURRCODE	VARCHAR2(50 BYTE)
, ROVER_VALUE_TQA	FLOAT
, CLOSE_	FLOAT
, OPEN_	FLOAT
, HIGH	FLOAT
, LOW	FLOAT
, BID	FLOAT
, ASK	FLOAT
, TQA_PRICE_COV	VARCHAR2(80 BYTE)
);

INSERT INTO S22_CSP_CPRC_F_R_EXP_DES_TQA@PMC_EOD_LINK(SEC_ID,ROVER_DATE,ROVER_VALUE,SECURITY_DSC,MKT_SECTOR_CD,SEC_TY_LVL1,SMCP,TAG,START_DT,END_DT,METRIC_CD,METRIC_VAL,PRICE_COV,PMC_SRC,SEC_ID_TQA,ROVER_DATE_TQA,MARKETDATE,CUSIP,DSQTNAME,REGION,TYPECODE,PRIMISOCURRCODE,ROVER_VALUE_TQA,CLOSE_,OPEN_,HIGH,LOW,BID,ASK,TQA_PRICE_COV)
select distinct * from S22_CSP_CPRC_FULL_RES_EXP_DES@PMC_EOD_LINK full_r_d
left outer join CSP_CPRC_TQA_MATCH@PMC_EOD_LINK tqa_csp on tqa_csp.sec_id = full_r_d.sec_id and tqa_csp.rover_value = full_r_d.rover_value;

commit;

select * from S22_CSP_CPRC_F_R_EXP_DES_TQA@PMC_EOD_LINK where TQA_PRICE_COV is null;
----------------------------------------------------------------------------------------
